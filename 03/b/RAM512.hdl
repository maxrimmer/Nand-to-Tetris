// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[0..2], a=lRAM1, b=lRAM2, c=lRAM3, d=lRAM4, e=lRAM5, f=lRAM6, g=lRAM7, h=lRAM8);

    RAM64(in=in, load=lRAM1, address=address[3..8], out=oRAM1);
    RAM64(in=in, load=lRAM2, address=address[3..8], out=oRAM2);
    RAM64(in=in, load=lRAM3, address=address[3..8], out=oRAM3);
    RAM64(in=in, load=lRAM4, address=address[3..8], out=oRAM4);
    RAM64(in=in, load=lRAM5, address=address[3..8], out=oRAM5);
    RAM64(in=in, load=lRAM6, address=address[3..8], out=oRAM6);
    RAM64(in=in, load=lRAM7, address=address[3..8], out=oRAM7);
    RAM64(in=in, load=lRAM8, address=address[3..8], out=oRAM8);

    Mux8Way16(a=oRAM1, b=oRAM2, c=oRAM3, d=oRAM4, e=oRAM5, f=oRAM6, g=oRAM7, h=oRAM8, sel=address[0..2], out=out);

}
